import React, { useEffect, useState } from 'react';
import axios from 'axios';
import './Meeting.css'; // Th√™m file CSS ri√™ng

const Meeting = () => {
    const [meetings, setMeetings] = useState([]);

    useEffect(() => {
        fetchMeetings();
    }, []);

    const fetchMeetings = async () => {
        try {
            const response = await axios.get("http://localhost:5000/meeting");
            const sortedMeetings = response.data.sort((a, b) => new Date(a.meeting_date) - new Date(b.meeting_date));
            setMeetings(sortedMeetings);
        } catch (error) {
            console.error("L·ªói khi l·∫•y danh s√°ch cu·ªôc h·ªçp:", error);
        }
    };

    const deleteMeeting = async (meetingId) => {
        if (!window.confirm("B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a cu·ªôc h·ªçp n√†y?")) return;

        try {
            await axios.delete(`http://localhost:5000/meeting/${meetingId}`);
            setMeetings(meetings.filter(meeting => meeting._id !== meetingId));
            alert("X√≥a cu·ªôc h·ªçp th√†nh c√¥ng!");
        } catch (error) {
            console.error("L·ªói khi x√≥a cu·ªôc h·ªçp:", error);
            alert("Kh√¥ng th·ªÉ x√≥a cu·ªôc h·ªçp. Vui l√≤ng th·ª≠ l·∫°i!");
        }
    };

    return (
        <div className="meeting-container">
            <h2 className="meeting-title">üìÖ Danh s√°ch cu·ªôc h·ªçp</h2>
            <div className="table-wrapper">
                <table className="meeting-table">
                    <thead>
                        <tr>
                            <th>Ng√†y</th>
                            <th>Gi·ªù b·∫Øt ƒë·∫ßu</th>
                            <th>Gi·ªù k·∫øt th√∫c</th>
                            <th>Gia s∆∞</th>
                            <th>H·ªçc sinh</th>
                            <th>M√¥n h·ªçc</th>
                            <th>ƒê·ªãa ƒëi·ªÉm</th>
                            <th>Thao t√°c</th>
                        </tr>
                    </thead>
                    <tbody>
                        {meetings.map(meeting => (
                            <tr key={meeting._id}>
                                <td>{new Date(meeting.meeting_date).toLocaleDateString()}</td>
                                <td>{meeting.meeting_time}</td>
                                <td>{meeting.end_time}</td>
                                <td>{meeting.tutor_id?.name || "Kh√¥ng c√≥ gia s∆∞"}</td>
                                <td>{meeting.student_ids?.map(s => s.name).join(", ") || "Kh√¥ng c√≥ h·ªçc sinh"}</td>
                                <td>{meeting.subject_id?.subject_name || "Kh√¥ng c√≥ m√¥n h·ªçc"}</td>
                                <td>{meeting.location}</td>
                                <td>
                                    <button className="delete-btn" onClick={() => deleteMeeting(meeting._id)}>
                                        ‚ùå X√≥a
                                    </button>
                                </td>
                            </tr>
                        ))}
                        {meetings.length === 0 && (
                            <tr>
                                <td colSpan="7" className="no-data">Kh√¥ng c√≥ cu·ªôc h·ªçp n√†o.</td>
                            </tr>
                        )}
                    </tbody>
                </table>
            </div>
        </div>
    );
};

export default Meeting;
